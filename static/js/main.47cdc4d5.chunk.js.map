{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classnames","TodoList","todos","map","findUser","users","todoUserId","find","preparedTodos","userId","usersFromServer","App","useState","visibleTodos","setVisibleTodos","setTitle","hasTitle","setHasTitle","selectedUserId","setSelectedUserId","hasSelectedUser","setHasSelectedUser","action","method","onSubmit","event","preventDefault","prevTodos","maxId","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47cdc4d5.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../interfaces/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { PreparedTodo } from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: PreparedTodo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classnames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { PreparedTodo } from '../../interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { PreparedTodo, Todo } from './interfaces/Todo';\nimport { User } from './interfaces/User';\nimport { TodoList } from './components/TodoList';\n\nconst findUser = (users: User[], todoUserId: number): User | null => {\n  return users.find((user: User) => user.id === todoUserId) || null;\n};\n\nconst userJoinToTodos = (todos: Todo[]): PreparedTodo[] => {\n  return todos\n    .map((todo: Todo) => ({\n      ...todo,\n      user: findUser(usersFromServer, todo.userId),\n    }));\n};\n\nconst preparedTodos: PreparedTodo[] = userJoinToTodos(todosFromServer);\n\nexport const App = () => {\n  const [\n    visibleTodos,\n    setVisibleTodos,\n  ] = useState<PreparedTodo[]>(preparedTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasTitle, setHasTitle] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasSelectedUser, setHasSelectedUser] = useState(false);\n\n  const handleTitleChange = ((event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitle(false);\n  });\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleUserChange = ((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasSelectedUser(false);\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitle(!title);\n    setHasSelectedUser(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    setVisibleTodos((prevTodos) => {\n      const maxId: number = Math.max(...prevTodos.map(todo => todo.id));\n\n      return [\n        ...prevTodos,\n        {\n          id: maxId + 1,\n          title,\n          completed: false,\n          userId: selectedUserId,\n          user: findUser(usersFromServer, selectedUserId),\n        },\n      ];\n    });\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasSelectedUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}